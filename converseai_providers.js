/**
 * @file converseai_providers.js
 *
 * Generated by the converse-cli tool for use with the Converse AI
 * Plugins SDK. https://developers.converse.ai/
 */

'use strict';

const Status                    = require('@converseai/plugins-sdk').Status;
const RegistrationDataResponse  = require('@converseai/plugins-sdk').Payloads.RegistrationDataResponse;
const OAuth2HandleCodeResponse  = require('@converseai/plugins-sdk').Payloads.OAuth2HandleCodeResponse;
const adp = require('./lib/adp');
const util = require('./lib/util');

// const onOAuthHandleCode = async (app, token) => {
//   const response = new OAuth2HandleCodeResponse();

//   response.setExpiresIn(token.expires_in);
//   response.setAccessToken(token.access_token);
  
//   return app.send(Status.SUCCESS, response);
// }

const onProviderRegister = async (app, body) => {
  const response = new OAuth2HandleCodeResponse();

  const registrationData = body.payload.registrationData;

  const res = await adp.auth(registrationData.app)
    .catch(err => {
      console.error(err);
      return util.handleError(app, err);
    });

  // console.log(res);
  // await onOAuthHandleCode(app, res);

  response.setExpiresIn(res.expires_in);
  response.setAccessToken(res.access_token);

  return app.send(Status.SUCCESS, response);
}

const onProviderUnregister = (app, body) => {
  return app.send(Status.SUCCESS);
}

module.exports = {
  onProviderRegister,
  onProviderUnregister
}
