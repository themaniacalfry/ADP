/**
 * @file converseai_providers.js
 *
 * Generated by the converse-cli tool for use with the Converse AI
 * Plugins SDK. https://developers.converse.ai/
 */

'use strict';

const Status                    = require('@converseai/plugins-sdk').Status;
const OAuth2HandleCodeResponse  = require('@converseai/plugins-sdk').Payloads.OAuth2HandleCodeResponse;
const adp = require('./lib/adp');
const util = require('./lib/util');

// When a user saves the resgistration in Bridge, the onProviderRegister function is called.
const onProviderRegister = async (app, body) => {
  const response = new OAuth2HandleCodeResponse();

  const registrationData = body.payload.registrationData;

  // This function will make the POST API call to the token endpont to obtain a token.
  const res = await adp.auth(registrationData.app)
    .catch(err => {
      return util.handleError(app, err);
    });

  // The token and the expiration time will be saved.
  response.setExpiresIn(res.expires_in);
  response.setAccessToken(res.access_token);

  // Sends the token and expiration back to the app.
  return app.send(Status.SUCCESS, response);
}

const onProviderUnregister = (app, body) => {
  return app.send(Status.SUCCESS);
}

module.exports = {
  onProviderRegister,
  onProviderUnregister
}
